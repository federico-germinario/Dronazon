syntax = "proto3";
package com.example.grpc;

message InitializationRequest {

    // true = richiesta cambio successore + presentazione
    // false = richiesta presentazione
    bool changeSuccDrone = 1;

    int32 id = 2;
    string ip = 3;
    int32 port = 4;
    int32 x = 5;
    int32 y = 6;
}

message InitializationResponse {
    bool isMaster = 1;
    bool changeSuccDrone = 2;

    int32 idMaster = 3;
    string ipMaster = 4;
    int32 portMaster = 5;
}


message ElectionRequest{
    int32 id = 1;
    int32 battery = 2;
}

message ElectedRequest{
    int32 id = 1;
    string ip = 2;
    int32 port = 3;
}


message InfoDrone{
    int32 id = 1;
    int32 x = 2;
    int32 y = 3;
    int32 battery = 4;
}

message Empty{
}

message DeliveryRequest{
    int32 id = 1;
    int32 XCollection = 2;
    int32 YCollection = 3;
    int32 XDelivery = 4;
    int32 YDelivery = 5;
}

message DeliveryResponse{
    int64 timestampDelivery = 1;
    int32 x = 2;
    int32 y = 3;
    float km = 4;
    repeated double pollutionMeasurements = 5;
    int32 battery = 6;
}

message InvalidationElectionRequest{
    int32 id = 1;
}

service Service {
    rpc initialization(InitializationRequest) returns (InitializationResponse);
    rpc ping(Empty) returns (Empty);
    rpc election(ElectionRequest) returns (ElectionRequest);
    rpc elected(ElectedRequest) returns (ElectedRequest);
    rpc infoDrone(Empty) returns (InfoDrone);
    rpc delivery(DeliveryRequest) returns (DeliveryResponse);
    rpc invalidationElection(InvalidationElectionRequest) returns (Empty);
}